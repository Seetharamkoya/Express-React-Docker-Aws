name: Build and Push Docker Images-express
on:
  push: 
    branches:
      - main
    

env:
  DOCKER_REGISTRY: https://hub.docker.com/
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/express-docker
  

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Lowercase the repo name
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Docker Image Version
        id: version
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "::set-output name=version::${GITHUB_REF#refs/heads/}-${GITHUB_SHA:0:7}"
          else
            echo "::set-output name=version::latest"
          fi

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN}}    
      
      - name: Build and Push Docker Image
        run: |
            cd express-server
            docker build -t $IMAGE_NAME .
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ steps.version.outputs.version }}
            docker push $IMAGE_NAME:latest 
            docker push $IMAGE_NAME:${{ steps.version.outputs.version }}

  deploy:
    needs: build-and-push 
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to EC2 Instance
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST}}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          script: |
            sudo yum update -y
            sudo amazon-linux-extras install docker -y
            sudo service docker start
            sudo usermod -a -G docker ec2-user
            docker pull $IMAGE_NAME:${{ steps.version.outputs.version }}
            docker run -d -p 5000:5000 --name $IMAGE_NAME:${{ steps.version.outputs.version }}
    
        




     